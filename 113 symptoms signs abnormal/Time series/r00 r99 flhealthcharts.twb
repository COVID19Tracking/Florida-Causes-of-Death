<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.1110.1614                               -->
<workbook original-version='18.1' source-build='2020.2.8 (20202.20.1110.1614)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='FLHealthCharts (r00-r99 time series)' inline='true' name='federated.0bz48uo11zhnuj1dv7kdq1xhlzei' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='r00-r99 time series' name='excel-direct.05o5cvg0efw3u11cezknu0r3ajwa'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/bague/Documents/GitHub/Florida-Causes-of-Death/113 symptoms signs abnormal/Time series/r00-r99 time series.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.05o5cvg0efw3u11cezknu0r3ajwa' name='FLHealthCharts' table='[FLHealthCharts$]' type='table'>
          <columns gridOrigin='A1:O70:no:A1:O70:0' header='yes' outcome='2'>
            <column datatype='string' name='County' ordinal='0' />
            <column datatype='integer' name='6/7/2020' ordinal='1' />
            <column datatype='integer' name='6/14/2020' ordinal='2' />
            <column datatype='integer' name='7/5/2020' ordinal='3' />
            <column datatype='integer' name='7/19/2020' ordinal='4' />
            <column datatype='integer' name='7/26/2020' ordinal='5' />
            <column datatype='integer' name='8/7/2020' ordinal='6' />
            <column datatype='integer' name='8/16/2020' ordinal='7' />
            <column datatype='integer' name='8/22/2020' ordinal='8' />
            <column datatype='integer' name='9/21/2020' ordinal='9' />
            <column datatype='integer' name='10/18/2020' ordinal='10' />
            <column datatype='integer' name='10/25/2020' ordinal='11' />
            <column datatype='integer' name='11/15/2020' ordinal='12' />
            <column datatype='integer' name='12/6/2020' ordinal='13' />
            <column datatype='integer' name='12/13/2020' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.05o5cvg0efw3u11cezknu0r3ajwa' name='FLHealthCharts' table='[FLHealthCharts$]' type='table'>
          <columns gridOrigin='A1:O70:no:A1:O70:0' header='yes' outcome='2'>
            <column datatype='string' name='County' ordinal='0' />
            <column datatype='integer' name='6/7/2020' ordinal='1' />
            <column datatype='integer' name='6/14/2020' ordinal='2' />
            <column datatype='integer' name='7/5/2020' ordinal='3' />
            <column datatype='integer' name='7/19/2020' ordinal='4' />
            <column datatype='integer' name='7/26/2020' ordinal='5' />
            <column datatype='integer' name='8/7/2020' ordinal='6' />
            <column datatype='integer' name='8/16/2020' ordinal='7' />
            <column datatype='integer' name='8/22/2020' ordinal='8' />
            <column datatype='integer' name='9/21/2020' ordinal='9' />
            <column datatype='integer' name='10/18/2020' ordinal='10' />
            <column datatype='integer' name='10/25/2020' ordinal='11' />
            <column datatype='integer' name='11/15/2020' ordinal='12' />
            <column datatype='integer' name='12/6/2020' ordinal='13' />
            <column datatype='integer' name='12/13/2020' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O70:no:A1:O70:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>6/7/2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[6/7/2020]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>6/7/2020</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>6/14/2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[6/14/2020]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>6/14/2020</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>7/5/2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[7/5/2020]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>7/5/2020</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>7/19/2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[7/19/2020]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>7/19/2020</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>7/26/2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[7/26/2020]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>7/26/2020</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>8/7/2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[8/7/2020]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>8/7/2020</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>8/16/2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[8/16/2020]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>8/16/2020</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>8/22/2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[8/22/2020]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>8/22/2020</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>9/21/2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[9/21/2020]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>9/21/2020</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>10/18/2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[10/18/2020]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>10/18/2020</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>10/25/2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[10/25/2020]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>10/25/2020</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>11/15/2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[11/15/2020]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>11/15/2020</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>12/6/2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[12/6/2020]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>12/6/2020</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>12/13/2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[12/13/2020]</local-name>
            <parent-name>[FLHealthCharts]</parent-name>
            <remote-alias>12/13/2020</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[10/18/2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[10/25/2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[11/15/2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[12/13/2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[12/6/2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[6/14/2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[6/7/2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[7/19/2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[7/26/2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[7/5/2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[8/16/2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[8/22/2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[8/7/2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[9/21/2020]' role='measure' type='quantitative' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='FLHealthCharts' datatype='table' name='[__tableau_internal_object_id__].[FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58]' role='measure' type='quantitative' />
      <column-instance column='[10/18/2020]' derivation='Sum' name='[sum:10/18/2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[10/25/2020]' derivation='Sum' name='[sum:10/25/2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[11/15/2020]' derivation='Sum' name='[sum:11/15/2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[12/13/2020]' derivation='Sum' name='[sum:12/13/2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[12/6/2020]' derivation='Sum' name='[sum:12/6/2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[6/14/2020]' derivation='Sum' name='[sum:6/14/2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[6/7/2020]' derivation='Sum' name='[sum:6/7/2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[7/19/2020]' derivation='Sum' name='[sum:7/19/2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[7/26/2020]' derivation='Sum' name='[sum:7/26/2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[7/5/2020]' derivation='Sum' name='[sum:7/5/2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[8/16/2020]' derivation='Sum' name='[sum:8/16/2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[8/22/2020]' derivation='Sum' name='[sum:8/22/2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[8/7/2020]' derivation='Sum' name='[sum:8/7/2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[9/21/2020]' derivation='Sum' name='[sum:9/21/2020:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:7/26/2020:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:10/18/2020:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:12/6/2020:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:8/7/2020:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:7/5/2020:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:6/14/2020:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:10/25/2020:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:6/7/2020:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:9/21/2020:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:8/16/2020:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:7/19/2020:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:11/15/2020:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:8/22/2020:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:12/13/2020:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='FLHealthCharts' id='FLHealthCharts_038EE9174DEF4A29B8148025B5F6EC58'>
            <properties context=''>
              <relation connection='excel-direct.05o5cvg0efw3u11cezknu0r3ajwa' name='FLHealthCharts' table='[FLHealthCharts$]' type='table'>
                <columns gridOrigin='A1:O70:no:A1:O70:0' header='yes' outcome='2'>
                  <column datatype='string' name='County' ordinal='0' />
                  <column datatype='integer' name='6/7/2020' ordinal='1' />
                  <column datatype='integer' name='6/14/2020' ordinal='2' />
                  <column datatype='integer' name='7/5/2020' ordinal='3' />
                  <column datatype='integer' name='7/19/2020' ordinal='4' />
                  <column datatype='integer' name='7/26/2020' ordinal='5' />
                  <column datatype='integer' name='8/7/2020' ordinal='6' />
                  <column datatype='integer' name='8/16/2020' ordinal='7' />
                  <column datatype='integer' name='8/22/2020' ordinal='8' />
                  <column datatype='integer' name='9/21/2020' ordinal='9' />
                  <column datatype='integer' name='10/18/2020' ordinal='10' />
                  <column datatype='integer' name='10/25/2020' ordinal='11' />
                  <column datatype='integer' name='11/15/2020' ordinal='12' />
                  <column datatype='integer' name='12/6/2020' ordinal='13' />
                  <column datatype='integer' name='12/13/2020' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='By county'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Florida R00-R99 deaths by county, June-December 2020. Source: www.FlHealthCharts.com, Florida Bureau of Vital Statistics</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FLHealthCharts (r00-r99 time series)' name='federated.0bz48uo11zhnuj1dv7kdq1xhlzei' />
          </datasources>
          <datasource-dependencies datasource='federated.0bz48uo11zhnuj1dv7kdq1xhlzei'>
            <column datatype='integer' name='[10/18/2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[10/25/2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[11/15/2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[12/13/2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[12/6/2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[6/14/2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[6/7/2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[7/19/2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[7/26/2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[7/5/2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[8/16/2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[8/22/2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[8/7/2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[9/21/2020]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[10/18/2020]' derivation='Sum' name='[sum:10/18/2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[10/25/2020]' derivation='Sum' name='[sum:10/25/2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[11/15/2020]' derivation='Sum' name='[sum:11/15/2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[12/13/2020]' derivation='Sum' name='[sum:12/13/2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[12/6/2020]' derivation='Sum' name='[sum:12/6/2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[6/14/2020]' derivation='Sum' name='[sum:6/14/2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[6/7/2020]' derivation='Sum' name='[sum:6/7/2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7/19/2020]' derivation='Sum' name='[sum:7/19/2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7/26/2020]' derivation='Sum' name='[sum:7/26/2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7/5/2020]' derivation='Sum' name='[sum:7/5/2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[8/16/2020]' derivation='Sum' name='[sum:8/16/2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[8/22/2020]' derivation='Sum' name='[sum:8/22/2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[8/7/2020]' derivation='Sum' name='[sum:8/7/2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[9/21/2020]' derivation='Sum' name='[sum:9/21/2020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:10/18/2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:10/25/2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:11/15/2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:12/13/2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:12/6/2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:6/14/2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:6/7/2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:7/19/2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:7/26/2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:7/5/2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:8/16/2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:8/22/2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:8/7/2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:9/21/2020:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:6/14/2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:6/7/2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:7/5/2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:7/19/2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:7/26/2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:8/7/2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:8/16/2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:8/22/2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:10/25/2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:9/21/2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:10/18/2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:11/15/2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:12/6/2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:12/13/2020:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[none:County:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alachua&quot;' function='range' level='[none:County:nk]' to='&quot;Taylor&quot;' />
              <groupfilter from='&quot;Union&quot;' function='range' level='[none:County:nk]' to='&quot;Washington&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[none:County:nk]</column>
            <column>[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[Multiple Values]</rows>
        <cols>([federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[none:County:nk] / [federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{B488F5B8-0FAF-4146-B0D3-30E098ED0541}' />
    </worksheet>
    <worksheet name='total'>
      <table>
        <view>
          <datasources>
            <datasource caption='FLHealthCharts (r00-r99 time series)' name='federated.0bz48uo11zhnuj1dv7kdq1xhlzei' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0bz48uo11zhnuj1dv7kdq1xhlzei'>
            <column datatype='integer' name='[12/13/2020]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[12/13/2020]' derivation='Sum' name='[sum:12/13/2020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[none:County:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alachua&quot;' function='range' level='[none:County:nk]' to='&quot;Taylor&quot;' />
              <groupfilter from='&quot;Union&quot;' function='range' level='[none:County:nk]' to='&quot;Washington&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:12/13/2020:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:12/13/2020:qk]</column>
            <column>[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[none:County:nk]</column>
            <column>[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:12/13/2020:qk]' />
              <text column='[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[none:County:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{962CBDD7-364C-45A3-B796-533A66BBEDA5}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='By county'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[none:County:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[:Measure Names]</field>
            <field>[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[none:County:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8CC5705-0898-4DF2-ACA5-00C4257B80C8}' />
    </window>
    <window class='worksheet' maximized='true' name='total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[none:County:nk]' type='filter' />
            <card param='[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[sum:12/13/2020:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bz48uo11zhnuj1dv7kdq1xhlzei].[none:County:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0543D7F8-40C5-4DBE-97E9-954090968E90}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='By county' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='total' width='192'>
      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
      rUkHQJppzf8DuAhhTQ1pwH8AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
